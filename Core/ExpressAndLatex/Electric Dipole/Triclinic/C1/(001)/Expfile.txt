{'SS': '(1*sin(phi)*(-xxx*cos(2*phi) + xxx + xyx*sin(2*phi) + yxx*sin(2*phi) + yyx*cos(2*phi) + yyx)/2 + 1*(-xyx*cos(2*phi) + xyx + xyy*sin(2*phi) + yyx*sin(2*phi) + yyy*cos(2*phi) + yyy)*cos(phi)/2)**2'}
{'SP': '(1*sin(phi)*(xxx*sin(2*phi) + xyx*cos(2*phi) + xyx + yxx*cos(2*phi) - yxx - yyx*sin(2*phi))/2 + 1*(xyx*sin(2*phi) + xyy*cos(2*phi) + xyy + yyx*cos(2*phi) - yyx - yyy*sin(2*phi))*cos(phi)/2)**2*cos(theta)**2 + (-1*zxx*cos(2*phi)/2 + 1*zxx/2 + zyx*sin(2*phi) + 1*zyy*cos(2*phi)/2 + 1*zyy/2)**2*sin(theta)**2'}
{'PS': '(((xzz*sin(phi) + yzz*cos(phi))*sin(theta) - (1*xzx*sin(2*phi)/2 + 1*xzy*cos(2*phi)/2 - 1*xzy/2 + 1*yzx*cos(2*phi)/2 + 1*yzx/2 - 1*yzy*sin(2*phi)/2)*cos(theta))*sin(theta) - (-(1*cos(phi)*(xxx*sin(2*phi) + xyx*cos(2*phi) - xyx + yxx*cos(2*phi) + yxx - yyx*sin(2*phi))/2 - 1*(xyx*sin(2*phi) + xyy*cos(2*phi) - xyy + yyx*cos(2*phi) + yyx - yyy*sin(2*phi))*sin(phi)/2)*cos(theta) + (1*xzx*sin(2*phi)/2 + 1*xzy*cos(2*phi)/2 - 1*xzy/2 + 1*yzx*cos(2*phi)/2 + 1*yzx/2 - 1*yzy*sin(2*phi)/2)*sin(theta))*cos(theta))**2'}
{'PP': '((zzz*sin(theta) - (zzx*cos(phi) - zzy*sin(phi))*cos(theta))*sin(theta) - ((zzx*cos(phi) - zzy*sin(phi))*sin(theta) - (1*zxx*cos(2*phi)/2 + 1*zxx/2 - zyx*sin(2*phi) - 1*zyy*cos(2*phi)/2 + 1*zyy/2)*cos(theta))*cos(theta))**2*sin(theta)**2 + (((xzz*cos(phi) - yzz*sin(phi))*sin(theta) - (1*xzx*cos(2*phi)/2 + 1*xzx/2 - 1*xzy*sin(2*phi)/2 - 1*yzx*sin(2*phi)/2 - 1*yzy*cos(2*phi)/2 + 1*yzy/2)*cos(theta))*sin(theta) - (-(1*cos(phi)*(xxx*cos(2*phi) + xxx - xyx*sin(2*phi) - yxx*sin(2*phi) - yyx*cos(2*phi) + yyx)/2 - 1*(xyx*cos(2*phi) + xyx - xyy*sin(2*phi) - yyx*sin(2*phi) - yyy*cos(2*phi) + yyy)*sin(phi)/2)*cos(theta) + (1*xzx*cos(2*phi)/2 + 1*xzx/2 - 1*xzy*sin(2*phi)/2 - 1*yzx*sin(2*phi)/2 - 1*yzy*cos(2*phi)/2 + 1*yzy/2)*sin(theta))*cos(theta))**2*cos(theta)**2'}
